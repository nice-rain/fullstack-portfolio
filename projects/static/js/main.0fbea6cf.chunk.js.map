{"version":3,"sources":["logo.svg","pages/Home.jsx","data/data.js","components/Footer.jsx","pages/ProjectPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","props","ProjectCellData","logo","alt","title","description","projectId","webp","this","PROJECTPAGES","vrportfolio","projectTitle","projectInfo","__html","projectHeader","headerFull","headerMobile","video","buttonTitle","buttonAnchor","projectBackgroundImage","projectDownloads","icon","link","projectGallery","src","thumbnail","thumbnailWidth","thumbnailHeight","caption","mazeescape","unrealhue","projectTrailer","fireflygrove","Footer","ProjectPage","useParams","project","className","style","console","log","backgroundImage","setBGImage","href","media","srcSet","dangerouslySetInnerHTML","length","builtDownloads","map","projectDownload","index","descriptionTag","key","generateDownloadsSection","projectLinks","builtLinks","projectLink","generateLinksSection","frameBorder","allow","allowFullScreen","images","enableImageSelection","App","path","exact","process","children","Boolean","window","location","hostname","match","ReactDOM","render","basename","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0fbea6cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\r\n\r\nexport default function Home(props){\r\n    return <>Home</>\r\n}","class ProjectCellData{\r\n    constructor(logo, alt, title, description, projectId, webp){\r\n        this.logo = logo;\r\n        this.alt = alt;\r\n        this.title = title;\r\n        this.description = description;\r\n        this.projectId = projectId;\r\n        this.webp = webp\r\n    }\r\n}\r\nexport const PROJECTCELLS = [\r\n    new ProjectCellData('images/projects/vrproject.png', 'VR Portfolio Logo', 'VR Portfolio', 'This is a VR portfolio that I built for Google Daydream VR using Unreal Engine 4.', 'vrportfolio', 'images/projects/vrproject.webp'),\r\n    new ProjectCellData('images/projects/mazeescape.png', 'Maze Escape Logo', 'Maze Escape', 'This is an older build of Maze Escape when I was just beginning to add AI. It contains a procedural blueprint system that allows for generating large mazes very quickly.', 'mazeescape', 'images/projects/mazeescape.webp'),\r\n    new ProjectCellData('images/projects/unrealhue.png', 'Unreal Hue Logo', 'Unreal Hue', 'This is an example project developed in Unreal Engine 4 that uses the Philips Hue Light API to drive lights using a day/night system.', 'unrealhue', 'images/projects/unrealhue.webp'),\r\n    new ProjectCellData('images/projects/fireflygrove.png', 'Firefly Grove Logo', 'Firefly Grove', 'This project is a single player farming/exploration game built from the ground up in UE4.', 'fireflygrove', 'images/projects/fireflygrove.webp')\r\n]\r\n\r\nexport const PROJECTPAGES = {\r\n    vrportfolio: {\r\n        projectTitle: 'VR Portfolio', //Used for page title\r\n        projectInfo: {__html: `<h2 id=\"About\">Background</h2><p>This is a VR Portfolio project that I originally created for Google Cardboard. \r\n            A company in Dallas was looking for a VR developer, and I was asked to develop a project over the weekend to showcase my skills. I envisioned a world \r\n            that someone could walk around in and interact with things such as my work history, education, artwork, and programming skills. \r\n            During the development of the project, I ran into an issue - the player was unable to move around. I solved this by plugging a \r\n            Playstation 3 controller into an android phone and using it to control the player's movement. While it still doesn't remove the \r\n            urge to walk around, I felt that this solution was much better than developing my portfolio as a theme park ride.</p>\r\n            <h3>Features</h3>\r\n            <ul>\r\n                <li>Two VR Maps showcasing my resume as well as my portfolio</li>\r\n                <li>Employment history timeline</li>\r\n                <li>Photo-slideshow containing transcript and degrees</li>\r\n                <li>Art gallery containing artwork I built for several projects.</li>\r\n                <li>Stable 60fps at all times.</li>\r\n            </ul>`}, //html content\r\n        projectHeader:{\r\n            headerFull: '/images/projects/vr_head.jpg',\r\n            headerMobile: '',\r\n            logo: '/images/projects/vr_logo.png',\r\n            alt: 'VR Portfolio Header',\r\n            video: '',\r\n            buttonTitle: 'Download Now',\r\n            buttonAnchor: '#project-downloads'\r\n        },\r\n        projectBackgroundImage: '/images/projects/vr_blur.jpg',\r\n        //projectTrailer: 'https://www.youtube.com/embed/GmzWbgzo6B4',\r\n        projectDownloads:[\r\n            {\r\n                icon: 'fab fa-android', //Font-Awesome class\r\n                title: 'VR Portfolio v1.0 APK',\r\n                //description: '34.4mb',\r\n                link: '#' //link to the content\r\n            }\r\n        ], \r\n        /*projectLinks:[\r\n            {\r\n                icon: 'fab fa-discord', //Font-Awesome class\r\n                title: 'Discord',\r\n                description: 'Join our discord server!',\r\n                link: '#' //link to the content\r\n            },\r\n            {\r\n                icon: 'fab fa-twitter', //icon in front of text, 25px\r\n                title: 'Twitter',\r\n                description: '',\r\n                link: '#' //link to the content\r\n            }\r\n        ],*/\r\n        projectGallery:[{\r\n            src: \"/images/projects/vr/1.png\",\r\n            thumbnail: \"/images/projects/vr/1_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"VR 2.0 Cavern\"\r\n        },\r\n        {\r\n            src: \"/images/projects/vr/2.png\",\r\n            thumbnail: \"/images/projects/vr/2_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Work History Timeline\"\r\n        },\r\n        {\r\n            src: \"/images/projects/vr/3.png\",\r\n            thumbnail: \"/images/projects/vr/3_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"VR Portfolio landing area\"\r\n        },\r\n        {\r\n            src: \"/images/projects/vr/4.png\",\r\n            thumbnail: \"/images/projects/vr/4_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Image gallery of older websites I built\"\r\n        },\r\n        {\r\n            src: \"/images/projects/vr/5.png\",\r\n            thumbnail: \"/images/projects/vr/5_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Another photo of VR 2.0 cavern\"\r\n        },\r\n        {\r\n            src: \"/images/projects/vr/6.png\",\r\n            thumbnail: \"/images/projects/vr/6_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Teleporter into art gallery\"\r\n        }]\r\n    },\r\n    //Add more projects here. Each key must be unique\r\n    mazeescape: {\r\n        projectTitle: 'Maze Escape', //Used for page title\r\n        projectInfo: {__html: `<h2 id=\"About\">About</h2><p>Maze Escape was a fun project inspired by moves such as The Maze Runner. The premise was a multiplayer, procedural maze that\r\n            the players needed to escape from. The maze would be filled with enemies and traps as well as puzzles. I also wanted the ability for the maze to change at certain intervals. \r\n            Because of these requirements, I developed a procedural system that generates a maze within a given boundary. The exit is traced first before applying recursion to place the \r\n            remaining maze tiles. The script allows for any type of tiles to be placed, including ones with different shapes or textures applied to them. My goal was to have quite a bit \r\n            of variety throughout the maze.</p>\r\n            <h3>Current Development State</h3>\r\n            <p>Unfortunately, the game itself wasn't very fun to play (at least in single player). In the movie, the maze was designed to be torture, and I feel that this project accomplishes \r\n            the same thing. Running around trying to escape with 1 life is not very enjoyable. With a large maze, it could potentially take over an hour for the user to escape in a single-player \r\n            game. There are quite a few things that I'd add in order to make the game more enjoyable if I ever resumed this project.</p><p><i class=\"fas fa-exclamation-triangle\"></i><strong>Update:</strong> Apparently I have lost the latest \r\n            build (with working AI). The uploaded build is an earlier proof of concept that includes maze generation and the ability to escape/start new games.</p>\r\n            <h4>Possible Future Updates</h4>\r\n            <ul>\r\n                <li>Fix/Update AI and add variety</li>\r\n                <li>Add/Style more tiles</li>\r\n                <li>Upgrade day/night to trigger events</li>\r\n                <li>Implement puzzles and traps</li>\r\n                <li>Implement tile changing based off event triggers</li>\r\n                <li>Add respawning option</li>\r\n                <li>Add certain power-ups or stat increases for subsequent runs</li>\r\n                <li>Implement some sort of map or compass system</li>\r\n                <li>Add multiplayer support</li>\r\n            </ul>`}, //html content\r\n        projectHeader:{\r\n            headerFull: '/images/projects/mazeescape_head.jpg',\r\n            headerMobile: '',\r\n            logo: '/images/projects/mazeescape_logo.png',\r\n            alt: 'Maze Escape Header',\r\n            video: '',\r\n            buttonTitle: 'Read More',\r\n            buttonAnchor: '#project-about'\r\n        },\r\n        projectBackgroundImage: '/images/projects/mazeescape_blur.jpg',\r\n        //projectTrailer: 'https://www.youtube.com/embed/GmzWbgzo6B4',\r\n        projectDownloads:[\r\n            {\r\n                icon: 'fab fa-windows', //Font-Awesome class\r\n                title: 'Maze Escape (Proof of Concept)',\r\n                //description: '34.4mb',\r\n                link: '#' //link to the content\r\n            }\r\n        ], \r\n        /*projectLinks:[\r\n            {\r\n                icon: 'fab fa-discord', //Font-Awesome class\r\n                title: 'Discord',\r\n                description: 'Join our discord server!',\r\n                link: '#' //link to the content\r\n            },\r\n            {\r\n                icon: 'fab fa-twitter', //icon in front of text, 25px\r\n                title: 'Twitter',\r\n                description: '',\r\n                link: '#' //link to the content\r\n            }\r\n        ],*/\r\n        projectGallery:[{\r\n            src: \"/images/projects/mazeescape/1.png\",\r\n            thumbnail: \"/images/projects/mazeescape/1_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Player view inside of maze\"\r\n        },\r\n        {\r\n            src: \"/images/projects/mazeescape/2.png\",\r\n            thumbnail: \"/images/projects/mazeescape/2_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Maze with birds-eye view\"\r\n        },\r\n        {\r\n            src: \"/images/projects/mazeescape/3.png\",\r\n            thumbnail: \"/images/projects/mazeescape/3_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Prototype concept of one of the enemies within the maze\"\r\n        }]\r\n    }, \r\n    unrealhue: {\r\n        projectTitle: 'Unreal Hue', //Used for page title\r\n        projectInfo: {__html: `<h2 id=\"About\">About</h2><p>Unreal Hue is a project that interfaces Unreal Engine with a Philips Hue system. This allows for controlling individual light intensity, as \r\n            well as light colors and affects. Because I only had white bulbs to test with, color was not implemented in this project. The project is pretty dirty and everything was hard-coded in \r\n            order to work with the API on my home device. In the future, I plan to move the logic into an engine module and release it.</p>`}, //html content\r\n        projectHeader:{\r\n            headerFull: '/images/projects/unrealhue_head.jpg',\r\n            headerMobile: '',\r\n            logo: '/images/projects/unrealhue_logo.png',\r\n            alt: 'Maze Escape Header',\r\n            video: '',\r\n            buttonTitle: 'Read More',\r\n            buttonAnchor: '#project-about'\r\n        },\r\n        projectBackgroundImage: '/images/projects/unrealhue_blur.jpg',\r\n        projectTrailer: 'https://www.youtube.com/embed/QE84bw1cJlg',\r\n        // projectDownloads:[\r\n        //     {\r\n        //         icon: 'fab fa-windows', //Font-Awesome class\r\n        //         title: 'Maze Escape (Proof of Concept)',\r\n        //         //description: '34.4mb',\r\n        //         link: '#' //link to the content\r\n        //     }\r\n        // ], \r\n        /*projectLinks:[\r\n            {\r\n                icon: 'fab fa-discord', //Font-Awesome class\r\n                title: 'Discord',\r\n                description: 'Join our discord server!',\r\n                link: '#' //link to the content\r\n            },\r\n            {\r\n                icon: 'fab fa-twitter', //icon in front of text, 25px\r\n                title: 'Twitter',\r\n                description: '',\r\n                link: '#' //link to the content\r\n            }\r\n        ],*/\r\n        // projectGallery:[{\r\n        //     src: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_b.jpg\",\r\n        //     thumbnail: \"https://c2.staticflickr.com/9/8356/28897120681_3b2c0f43e0_n.jpg\",\r\n        //     thumbnailWidth: 320,\r\n        //     thumbnailHeight: 212,\r\n        //     caption: \"Boats (Jeshu John - designerspics.com)\"\r\n        // }]\r\n    },\r\n    fireflygrove: {\r\n        projectTitle: 'Firefly Grove', //Used for page title\r\n        projectInfo: {__html: `<h2 id=\"About\">Background</h2><p>Firefly Grove is a Farming/Exploration game that was inspired by games such as Harvest Moon.\r\n            Instead of eveloping a top-down 2D tile-based game, I opted for a more realistic 3D approach. As a player, you have acquired a home and a small \r\n            plot of land on a planet that has recently been terraformed. Many of them reject technology and are weary of strangers. You will need to farm, \r\n            mine, explore, craft, and sell in order to build a new life on this planet. While the game is currently on home, I do intend to eventually \r\n            pick up development and finish the project.</p>\r\n        <h3>Features</h3>\r\n        <ul>\r\n            <li>Farming system complete with 4-5 different plants</li>\r\n            <li>Fully working inventory/storage as well as a sales system for income</li>\r\n            <li>Dialogue system with multiple dialogue paths</li>\r\n            <li>Functioning quest system that allows for repeat quests and chained quests</li>\r\n            <li>Day/Night Cycle</li>\r\n            <li>Farm Upgrade system for placing things such as a well or barn</li>\r\n            <li>Simple fishing system</li>\r\n        </ul>\r\n        <h3>Future Development</h3>\r\n        <ul>\r\n            <li>Add more plants and polish harvest quality system</li>\r\n            <li>Implement mine map and add resources to mine</li>\r\n            <li>Finish development of firefly grove map</li>\r\n            <li>Add more story-driven quests to explain planet's mysteries</li>\r\n            <li>Extend upgrade system</li>\r\n            <li>Polish artwork and town layout</li>\r\n            <li>Implement housing system to customize home</li>\r\n        </ul>`},\r\n        projectHeader:{\r\n            headerFull: '/images/projects/fireflygrove_head.jpg',\r\n            headerMobile: '',\r\n            logo: '/images/projects/fireflygrove_logo.png',\r\n            alt: 'Firefly Grove Header',\r\n            video: '',\r\n            buttonTitle: 'Read More',\r\n            buttonAnchor: '#project-about'\r\n        },\r\n        projectBackgroundImage: '/images/projects/fireflygrove_blur.jpg',\r\n        //projectTrailer: 'https://www.youtube.com/embed/QE84bw1cJlg',\r\n        // projectDownloads:[\r\n        //     {\r\n        //         icon: 'fab fa-windows', //Font-Awesome class\r\n        //         title: 'Maze Escape (Proof of Concept)',\r\n        //         //description: '34.4mb',\r\n        //         link: '#' //link to the content\r\n        //     }\r\n        // ], \r\n        /*projectLinks:[\r\n            {\r\n                icon: 'fab fa-discord', //Font-Awesome class\r\n                title: 'Discord',\r\n                description: 'Join our discord server!',\r\n                link: '#' //link to the content\r\n            },\r\n            {\r\n                icon: 'fab fa-twitter', //icon in front of text, 25px\r\n                title: 'Twitter',\r\n                description: '',\r\n                link: '#' //link to the content\r\n            }\r\n        ],*/\r\n        projectGallery:[{\r\n            src: \"/images/projects/fireflygrove/1.jpg\",\r\n            thumbnail: \"/images/projects/fireflygrove/1_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Torches can be held or placed on the farm.\"\r\n        },\r\n        {\r\n            src: \"/images/projects/fireflygrove/2.jpg\",\r\n            thumbnail: \"/images/projects/fireflygrove/2_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Some crops, such as carrots, have multiple harvest grades.\"\r\n        },\r\n        {\r\n            src: \"/images/projects/fireflygrove/3.jpg\",\r\n            thumbnail: \"/images/projects/fireflygrove/3_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Strawberries with multiple growth stages.\"\r\n        },\r\n        {\r\n            src: \"/images/projects/fireflygrove/4.jpg\",\r\n            thumbnail: \"/images/projects/fireflygrove/4_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Trees that are struck by lightening provide rare crafting materials.\"\r\n        },\r\n        {\r\n            src: \"/images/projects/fireflygrove/5.jpg\",\r\n            thumbnail: \"/images/projects/fireflygrove/5_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"Item placement is done in 3D space with colors letting the player know if an item can be placed on the tiles beneath it.\"\r\n        },\r\n        {\r\n            src: \"/images/projects/fireflygrove/6.jpg\",\r\n            thumbnail: \"/images/projects/fireflygrove/6_tn.jpg\",\r\n            thumbnailWidth: 320,\r\n            thumbnailHeight: 180,\r\n            caption: \"The player's home has a shipping container for selling items.\"\r\n        }]\r\n    }\r\n};","import React from 'react';\r\n\r\nexport default function Footer(props){\r\n    return <>Footer</>;\r\n}","import React from 'react';\r\nimport './ProjectPage.css';\r\n\r\nimport {useParams} from 'react-router-dom';\r\nimport {PROJECTPAGES} from '../data/data';\r\nimport Gallery from 'react-grid-gallery';\r\nimport Footer from '../components/Footer';\r\nimport Header from '../components/Header';\r\n\r\n\r\n\r\nexport default function ProjectPage(props)\r\n{\r\n    let { projectId } = useParams();\r\n    const project = PROJECTPAGES[projectId];\r\n\r\n\r\n     // Sets our background image if we have one (and it's valid)\r\n    // Image should have a strong gaussian blur applied and will be stretched.\r\n    function setBGImage()\r\n    {\r\n        console.log('setting bg image');\r\n        if(project.projectBackgroundImage)\r\n        {\r\n            return {\r\n                backgroundImage: `url(${project.projectBackgroundImage})`\r\n            }\r\n        }\r\n    }\r\n\r\n    //Returns true if we have a single link from our response\r\n    function generateLinksSection()\r\n    {\r\n        //Make sure we have at least one link\r\n        if(project && project.projectLinks && project.projectLinks.length > 0)\r\n        {\r\n\r\n            //Build all links in our array\r\n            const builtLinks = project.projectLinks.map((projectLink, index) =>{\r\n                //Update our description tag\r\n                let descriptionTag = ``;\r\n                if(projectLink.description && projectLink.description !== '')\r\n                {\r\n                    //Only return description if we have a valid one\r\n                    descriptionTag = ` (${projectLink.description})`;\r\n                }\r\n\r\n                //Return our JSX for each link\r\n                return <li key={`link${index}`}><i className={projectLink.icon}></i>{projectLink.title}{descriptionTag}: <a href={projectLink.link}>Link</a></li>;\r\n            });\r\n\r\n            //Return our JSX\r\n            return (\r\n\r\n                <section className=\"project-links project-pad\">\r\n                    <h2>Links</h2>\r\n                        <ul>\r\n                            {builtLinks}\r\n                        </ul>\r\n                </section>\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //Returns true if we have a single download from our response\r\n    function generateDownloadsSection()\r\n    {\r\n        //Make sure we have at least one download\r\n        if(project && project.projectDownloads && project.projectDownloads.length > 0)\r\n        {\r\n\r\n            //Build all links in our array\r\n            const builtDownloads = project.projectDownloads.map((projectDownload, index) =>{\r\n                //Update our description tag\r\n                let descriptionTag = ``;\r\n                if(projectDownload.description && projectDownload.description !== '')\r\n                {\r\n                    //Only return description if we have a valid one\r\n                    descriptionTag = ` (${projectDownload.description})`;\r\n                }\r\n\r\n                //Return our JSX for each link\r\n                return <li key={`link${index}`}><i className={projectDownload.icon}></i>{projectDownload.title}{descriptionTag}: <a href={projectDownload.link}>Download</a></li>;\r\n            });\r\n\r\n            //Return our JSX\r\n            return ( \r\n                <section className=\"project-downloads project-pad\">\r\n                    <h2>Downloads</h2>\r\n                        <ul>\r\n                            {builtDownloads}\r\n                        </ul>\r\n                </section>\r\n\r\n            );\r\n        }\r\n        return null;\r\n    }\r\n\r\n    //Returns true if we have at least one image in our gallery\r\n    function galleryIsValid()\r\n    {\r\n        return project &&\r\n            project.projectGallery &&\r\n            project.projectGallery.length > 0;\r\n    }\r\n\r\n    //Returns true if we have a trailer to display\r\n    function trailerIsValid()\r\n    {\r\n        return project &&\r\n            project.projectTrailer &&\r\n            project.projectTrailer !== null &&\r\n            project.projectTrailer !== '';   \r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"project-page\" style={setBGImage()}>\r\n        <div>\r\n            <section className=\"project-header\">\r\n            <div className=\"project-header-wrapper\">\r\n                <div className=\"project-header-content\">\r\n                    <div className=\"project-header-logo-wrapper\">\r\n                        <img src={project.projectHeader.logo} alt={project.projectTitle} />\r\n                    </div>\r\n                    <a href={project.projectHeader.buttonAnchor}><button>{project.projectHeader.buttonTitle}</button></a>\r\n                </div>\r\n            </div>\r\n            <picture>\r\n                <source media=\"(max-width:650px)\" srcSet=\"/images/projects/template_head_mobile.jpg\"></source>\r\n                <img src={project.projectHeader.headerFull} alt=\"VR\"></img>\r\n            </picture>\r\n        \r\n            </section>\r\n            </div>\r\n            {/* End Header Section */}\r\n            <div className=\"project-page-wrapper\">\r\n                <div className=\"project-page-content\">\r\n                <main>\r\n                    <section className=\"project-info project-pad\">\r\n                        <div dangerouslySetInnerHTML={project.projectInfo} ></div>\r\n                    </section>\r\n                    {generateDownloadsSection()}\r\n                    {generateLinksSection()}\r\n                    <section className=\"project-media\">\r\n                    {trailerIsValid() && <div className=\"trailer-container\">\r\n                        <iframe title={project.projectTitle} className=\"trailer\" src={project.projectTrailer} frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\" allowFullScreen></iframe>\r\n                    </div>}\r\n                    {galleryIsValid() && <div className=\"media-container\">\r\n                        <Gallery images={project.projectGallery} enableImageSelection={false}/>\r\n                    </div>}\r\n                    </section>\r\n                </main>\r\n                <Footer/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport ProjectPage from './pages/ProjectPage';\n\nimport logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      </header>\n      <main>\n        <Switch>\n          <Route path='/' exact>\n            <Home/>\n          </Route>\n          \n          <Route path={`${process.env.PUBLIC_URL}/:projectId`} children={<ProjectPage/>} />\n\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}